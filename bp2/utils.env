
tunnel() {
    filter="ssh -nNtL 8181:`docker-ip dockerreg.cyanoptics.com.cyan.platform-build_haproxy_0`:80"
    pid=`ps -ef | grep "$filter" | grep -v grep | awk '{print $2}'`
    case $1 in
        status)
            if [ "$pid x" == " x" ]; then
                echo "stopped"
            else
                echo "running ($pid)"
            fi
            ;;
        stop)
            if [ "$pid x" == " x" ]; then
                echo "not running"
            else
                echo "stopping"
                kill -9 $pid
            fi
            ;;
        start)
            if [ "$pid x" == " x" ]; then
                echo "starting"
                (ssh -nNtL 8181:`docker-ip dockerreg.cyanoptics.com.cyan.platform-build_haproxy_0`:80 dbainbri@`docker-ubuntu ip` > /dev/null 2&>1 &)
            else
                echo "already running"
            fi
            ;;
        restart)
            if [ "$pid x" != " x" ]; then
                echo "stopping"
                kill -9 $pid
            fi
            echo "starting"
            (ssh -nNtL 8181:`docker-ip dockerreg.cyanoptics.com.cyan.platform-build_haproxy_0`:80 dbainbri@`docker-ubuntu ip` > /dev/null 2&>1 &)
            ;;
        *)
            echo "unknown tunnel command"
            return 1
    esac
}

instance() {
    case $1 in
        list)
            docker ps --filter="name=bp2-onos_[0-9]*" --format='table {{ .Names }}\t{{ .ID }}\t{{ .Image }}\t{{ .Status }}'
            ;;
        logs)
            shift
            ID=$1; shift
            OPT=$1
            docker logs $OPT cyan.onoscluster-13_bp2-onos_$ID
            ;;
        onos)
            shift
            ID=$1; shift
            OPT=$1
            docker exec cyan.onoscluster-13_bp2-onos_$ID tail $OPT /root/onos/apache-karaf-3.0.3/data/log/karaf.log
            ;;
        cluster)
            shift
            ID=$1; shift
            OPT=$1
            docker exec cyan.onoscluster-13_bp2-onos_$ID tail $OPT /bp2/hooks/cluster.log
            ;;
        config)
            shift
            ID=$1; shift
            case $1 in
                cluster)
                    docker exec cyan.onoscluster-13_bp2-onos_$ID cat /bp2/hooks/cluster.json | python -m json.tool
                    ;;
                tablets)
                    docker exec cyan.onoscluster-13_bp2-onos_$ID cat /bp2/hooks/tablets.json | python -m json.tool
                    ;;
            esac
            ;;
        exec)
            shift
            ID=$1; shift
            docker exec cyan.onoscluster-13_bp2-onos_$ID $@
            ;;
        ssh)
            shift
            ID=$1; shift
            LPORT=`expr 8101 + $ID`
            # Create forwarding tunnel to ONOS
            IP=`docker-ip cyan.onoscluster-13_bp2-onos_$ID`
            (ssh -o StrictHostKeyChecking=no -nNtL "$LPORT:$IP:8101" dbainbri@`docker-ubuntu ip` > /dev/null 2>&1 &)
            sleep 1
            # ssh to local port
            ssh -p $LPORT -o StrictHostKeyChecking=no karaf@127.0.0.1
            # Kill tunnel
            filter="ssh -o StrictHostKeyChecking=no -nNtL $LPORT:`docker-ip cyan.onoscluster-13_bp2-onos_$ID`:8101"
            pid=`ps -ef | grep "$filter" | grep -v grep | awk '{print $2}'`
            kill -9 $pid
            ;;
        *)
            echo "unknown instance command"
            return 1
    esac
}
